apiVersion: apps/v1
kind: Deployment
metadata:
  name: book-mgmt-api-deploy
  labels:
    # name: book-mgmt-api-deploy
    app: book-management
    component: api
  namespace: development
spec:
  replicas: 1
  selector:
    matchLabels:
      # name: book-mgmt-api-pod
      app: book-management
      component: api
  template:
    metadata:
      # name: book-mgmt-api-pod
      labels:
        # name: book-mgmt-api-pod
        app: book-management
        component: api
    spec:
      containers:
        - name: book-management-api-image
          image: API_DOCKER_IMG_TAG
          imagePullPolicy: Always
          env:
          - name: MYSQL_PASSWORD
            valueFrom:
                secretKeyRef:
                  name: mysql-credentials
                  key: root-password
          envFrom:
            - configMapRef:
                name: database-config
          ports:
            - containerPort: 5000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: role
                operator: In
                values:
                - web
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: book-management
                  component: app
              topologyKey: "kubernetes.io/hostname"
