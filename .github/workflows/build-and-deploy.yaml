name: Docker build and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GAR_LOCATION: us-central1 
  GKE_CLUSTER: my-gke-cluster
  GKE_ZONE: us-central1-a
  DEPLOYMENT_NAME_CLIENT: gke-client
  DEPLOYMENT_NAME_SERVER:  gke-server
  REPOSITORY: samples
  IMAGE_CLIENT: client
  IMAGE_SERVER: server
  CLIENT: ./app
  SERVER: ./api
  SITE_HOSTNAME: localhost


jobs:
  # create-image-and-push-to-dockerhub:
  
  #   name: Create Image and Push to Dockerhub
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v3

  #     # - name: Docker Login
  #     #   uses: docker/login-action@v2
  #     #   with:
  #     #     username: ${{ secrets.DOCKER_USERNAME }}
  #     #     password: ${{ secrets.DOCKER_TOKEN }}
      
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Build and push API image
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: ./api
  #         file: ./api/Dockerfile
  #         push: true
  #         tags: 9016/book-management-api:${{ github.sha }}
  #         # tags: $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/server:$GITHUB_SHA
      
  #     - name: Build and push App image
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: ./app
  #         file: ./app/Dockerfile
  #         push: true
  #         tags: 9016/book-management-app:${{ github.sha }}
  #         # tags: $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/client:$GITHUB_SHA
  #         build-args: REACT_APP_BASE_URL=${{ secrets.REACT_APP_BASE_URL }}
  
  setup-build-and-deploy:
    needs: [create-image-and-push-to-dockerhub]

    name: Setup and Deploy
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # - name: Authenticate to Google Cloud
    #   uses: google-github-actions/auth@v1
    #   with:
    #     credentials_json: ${{ secrets.GKE_SA }}

    # - name: Get GKE Credentials
    #   uses: google-github-actions/get-gke-credentials@v1
    #   with:
    #     cluster_name: ${{ secrets.GKE_CLUSTER_NAME }}
    #     location: ${{ secrets.GKE_CLUSTER_ZONE }}

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v2'
      with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v2
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push API image to GAR
      uses: docker/build-push-action@v4
      with:
        context: ./api
        file: ./api/Dockerfile
        push: true
        tags: $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/server:$GITHUB_SHA

    - name: Build and push App image to GAR
      uses: docker/build-push-action@v4
      with:
        context: ./app
        file: ./app/Dockerfile
        push: true
        tags: $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/client:$GITHUB_SHA
        # build-args: REACT_APP_BASE_URL=${{ secrets.REACT_APP_BASE_URL }}
    
    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x kustomize
        sudo mv kustomize /usr/local/bin/

    - name: Deploy API on the GKE
      run: |-
        # sed -i -e 's/DOCKER_IMG_TAG/'${{ github.sha }}'/' ./api/kubernetes/book-mgmt-api-deploy.yaml
        kustomize edit set image book-management-api=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE_SERVER:$GITHUB_SHA
        kubectl apply -f ./api/kubernetes/
    
    - name: Deploy App on GKE
      run: |-
        # sed -i -e 's/DOCKER_IMG_TAG/'${{ github.sha }}'/' ./app/kubernetes/book-mgmt-app-deploy.yaml
        kustomize edit set image book-management-app=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE_CLIENT:$GITHUB_SHA
        kubectl apply -f ./app/kubernetes/